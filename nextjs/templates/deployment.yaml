apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextjs-app
  labels:
    app: nextjs
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: nextjs
  template:
    metadata:
      labels:
        app: nextjs
    spec:
      containers:
        - name: nextjs
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          env:
            # üîê Secret env (sealed secret)
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: seminar-secret
                  key: DATABASE_URL

            # üåç Public env (from values.yaml)
            {{- range .Values.env }}
            - name: {{ .name }}
              value: "{{ .value }}"
            {{- end }}

          # ü©∫ Readiness Probe (gi·∫£m th·ªùi gian ph·∫£n h·ªìi)
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 3    # Gi·∫£m th·ªùi gian ch·ªù ban ƒë·∫ßu
            periodSeconds: 5          # Ki·ªÉm tra sau m·ªói 5 gi√¢y
            failureThreshold: 2       # Ch·ªâ cho ph√©p th·∫•t b·∫°i 2 l·∫ßn
            timeoutSeconds: 2         # Gi·∫£m th·ªùi gian ch·ªù ph·∫£n h·ªìi

          # ‚ù§Ô∏è Liveness Probe (gi·∫£m th·ªùi gian ph·∫£n h·ªìi)
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.targetPort }}
            initialDelaySeconds: 3    # Gi·∫£m th·ªùi gian ch·ªù ban ƒë·∫ßu
            periodSeconds: 5          # Ki·ªÉm tra sau m·ªói 5 gi√¢y
            failureThreshold: 2       # Ch·ªâ cho ph√©p th·∫•t b·∫°i 2 l·∫ßn
            timeoutSeconds: 2         # Gi·∫£m th·ªùi gian ch·ªù ph·∫£n h·ªìi

      # üîÑ Restart Policy v√† Backoff Limit
      restartPolicy: Always
      terminationGracePeriodSeconds: 5

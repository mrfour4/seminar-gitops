name: Auto Rollback on Argo CD Failure

on:
  repository_dispatch:
    types: [argo-degraded]

jobs:
  rollback:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Load Argo CD Token from Secrets
        env:
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          if [ -z "$ARGOCD_TOKEN" ]; then
            echo "Error: ARGOCD_TOKEN is not set!"
            exit 1
          fi
          echo "ARGOCD_TOKEN loaded successfully"

      - name: Get Last Healthy Revision
        env:
          ARGOCD_SERVER: "https://localhost:8080"
          APP_NAME: "seminar-nextjs"
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          # Lấy toàn bộ thông tin từ Argo CD API
          curl -k -s -X GET \
            "$ARGOCD_SERVER/api/v1/applications/$APP_NAME" \
            -H "Authorization: Bearer $ARGOCD_TOKEN" \
            -H "Content-Type: application/json" > argo_response.json

          echo "Argo CD Application Response:"
          cat argo_response.json

          # Lấy trạng thái hiện tại của ứng dụng
          CURRENT_HEALTH=$(jq -r '.status.health.status' argo_response.json)
          CURRENT_REVISION=$(jq -r '.status.sync.revision' argo_response.json)

          # Nếu trạng thái hiện tại là Healthy, sử dụng commit hiện tại
          if [[ "$CURRENT_HEALTH" == "Healthy" ]]; then
            LAST_HEALTHY_COMMIT=$CURRENT_REVISION
            echo "Currently Healthy, using latest revision: $LAST_HEALTHY_COMMIT"
          else
            # Nếu không Healthy, tìm commit Healthy gần nhất từ lịch sử
            LAST_HEALTHY_COMMIT=$(jq -r '.status.history | reverse | map(select(.health.status == "Healthy")) | .[0].revision' argo_response.json)
            if [[ -z "$LAST_HEALTHY_COMMIT" ]]; then
              echo "No healthy commit found, using latest available revision."
              LAST_HEALTHY_COMMIT=$(jq -r '.status.history | reverse | .[0].revision' argo_response.json)
            fi
          fi

          if [[ -z "$LAST_HEALTHY_COMMIT" ]]; then
            echo "Error: No healthy commit found!"
            exit 1
          fi

          echo "LAST_HEALTHY_COMMIT=$LAST_HEALTHY_COMMIT" >> $GITHUB_ENV
          echo "Last Healthy or Latest Commit: $LAST_HEALTHY_COMMIT"

      - name: Check if healthy commit was found
        if: env.LAST_HEALTHY_COMMIT == ''
        run: |
          echo "Error: No healthy commit found!"
          exit 1

      - name: Print received data
        run: |
          echo "App: ${{ github.event.client_payload.app }}"
          echo "Failed Revision: ${{ github.event.client_payload.failed_revision }}"
          echo "Last Healthy Commit: ${{ env.LAST_HEALTHY_COMMIT }}"

      - name: Rollback to Last Healthy Commit
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "GitOps Bot"
          git config user.email "gitops-bot@example.com"
          git revert ${{ github.event.client_payload.failed_revision }}..${{ env.LAST_HEALTHY_COMMIT }} --no-edit || true
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}
          git push origin HEAD:main

      - name: Verify rollback
        run: |
          git log -1
